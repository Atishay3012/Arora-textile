# Generated by Django 4.2.2 on 2024-07-23 16:01

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MyUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("country", models.CharField(default="", max_length=50)),
                ("city", models.CharField(default="", max_length=50)),
                ("phone", models.CharField(default="", max_length=10)),
                ("country_code", models.CharField(default="", max_length=10)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="BackCanva",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="static/designs"
                    ),
                ),
                ("url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=32, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("ordered", models.BooleanField(default=False)),
                (
                    "shipping_cost",
                    models.DecimalField(decimal_places=2, default=25.99, max_digits=10),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("M", "Men"),
                            ("W", "Women"),
                            ("K", "Kids"),
                            ("A", "Accessories"),
                        ],
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FrontCanva",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="static/designs"
                    ),
                ),
                ("url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.CharField(max_length=250)),
                (
                    "governorate",
                    models.CharField(
                        choices=[
                            ("Ad Daqahliyah", "Ad Daqahliyah"),
                            ("Al Bahr al Ahmar", "Al Bahr al Ahmar"),
                            ("Al Buhayrah", "Al Buhayrah"),
                            ("Al Fayyum", "Al Fayyum"),
                            ("Al Gharbiyah", "Al Gharbiyah"),
                            ("Al Iskandariyah", "Al Iskandariyah"),
                            ("Al Isma'iliyah", "Al Isma'iliyah"),
                            ("Al Jizah", "Al Jizah"),
                            ("Al Minufiyah", "Al Minufiyah"),
                            ("Al Minya", "Al Minya"),
                            ("Al Qahirah", "Al Qahirah"),
                            ("Al Qalyubiyah", "Al Qalyubiyah"),
                            ("Al Wadi al Jadid", "Al Wadi al Jadid"),
                            ("Ash Sharqiyah", "Ash Sharqiyah"),
                            ("As Suways", "As Suways"),
                            ("Aswan", "Aswan"),
                            ("Asyut", "Asyut"),
                            ("Bani Suwayf", "Bani Suwayf"),
                            ("Bur Sa'id", "Bur Sa'id"),
                            ("Dumyat", "Dumyat"),
                            ("Janub Sina'", "Janub Sina'"),
                            ("Kafr ash Shaykh", "Kafr ash Shaykh"),
                            ("Matruh", "Matruh"),
                            ("Qina", "Qina"),
                            ("Shamal Sina'", "Shamal Sina'"),
                            ("Suhaj", "Suhaj"),
                        ],
                        max_length=100,
                    ),
                ),
                ("city", models.CharField(max_length=100)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("paid", models.BooleanField(default=False)),
                ("final_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("phone", models.CharField(max_length=100)),
                ("order_number", models.CharField(editable=False, max_length=32)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("CC", "Credit Card"),
                            ("VS", "Visa"),
                            ("MC", "Master Card"),
                            ("COD", "Cash On Delivery"),
                            ("VF", "Vodafone"),
                            ("OG", "Orange"),
                            ("WE", "Wepay"),
                            ("PP", "Paypal"),
                            ("BT", "Bank Transfer"),
                        ],
                        default="Credit Card",
                        max_length=20,
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(decimal_places=2, default=25.99, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("P", "Placed"), ("S", "Shipped"), ("D", "Delivered")],
                        default="P",
                        max_length=2,
                    ),
                ),
            ],
            options={
                "ordering": ("-created",),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("customized", models.BooleanField(default=False)),
                ("product_name", models.CharField(max_length=50)),
                (
                    "label",
                    models.CharField(
                        choices=[
                            ("NEW", "primary"),
                            ("BEST Seller", "secondary"),
                            ("N", ""),
                        ],
                        default="",
                        max_length=11,
                    ),
                ),
                (
                    "subcategory",
                    models.CharField(
                        choices=[
                            ("S", "Shirt"),
                            ("SW", "Sport wear"),
                            ("OW", "Outwear"),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                ("price", models.FloatField(default=0)),
                ("discount_price", models.FloatField(default=0)),
                ("pub_date", models.DateField()),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="static"
                    ),
                ),
                ("material", models.CharField(default="Coton 100%", max_length=50)),
                (
                    "description",
                    models.TextField(
                        default="Are you looking for a t shirt that is comfortable, stylish and affordable? Look no further than our new collection of t shirts, designed to suit any occasion and personality. Whether you want to express your creativity, show your support for a cause, or simply enjoy a casual day out, we have the perfect t shirt for you. Our t shirts are made from high-quality cotton, which is soft, breathable and durable. They come in a variety of colors, sizes and designs, so you can find the one that matches your style and mood.  Our t shirts are easy to wash and care for, and they will not fade or shrink over time. They are also eco-friendly and ethically produced, so you can wear them with confidence and pride. Order your t shirt today and enjoy free shipping for orders over Rs 500. You will love how you look and feel in our t shirts, and so will everyone else. Don't miss this opportunity to get the best t shirt ever."
                    ),
                ),
                ("path", models.CharField(default="", max_length=50)),
                (
                    "BackCanva",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.backcanva",
                    ),
                ),
                (
                    "FrontCanva",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.frontcanva",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromoCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=15)),
                ("discount", models.FloatField()),
                ("max_discount", models.FloatField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="static"
                    ),
                ),
                ("path", models.CharField(default="", max_length=50)),
                ("color", models.CharField(default="", max_length=50)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="backend.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.category",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ManyToManyField(
                through="backend.ProductCategory", to="backend.category"
            ),
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("customized", models.BooleanField(default=False)),
                ("size", models.CharField(blank=True, max_length=10, null=True)),
                ("color", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="backend.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="backend.product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="coupon",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="backend.promocode",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                ("customized", models.BooleanField(default=False)),
                ("size", models.CharField(blank=True, max_length=10, null=True)),
                ("color", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "cart",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="backend.cart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="backend.product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cart",
            name="applied_coupons",
            field=models.ManyToManyField(
                blank=True, related_name="Applied_Coupons", to="backend.promocode"
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="coupon",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="backend.promocode",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.CharField(default="India", max_length=100)),
                ("address", models.CharField(max_length=100)),
                ("street_name", models.CharField(max_length=200)),
                ("building", models.CharField(max_length=200)),
                ("city", models.CharField(max_length=100)),
                ("governorate", models.CharField(max_length=100)),
                ("phone", models.CharField(max_length=100)),
                ("Nearest_landmark", models.CharField(max_length=100)),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="myuser",
            name="favorites",
            field=models.ManyToManyField(to="backend.product"),
        ),
        migrations.AddField(
            model_name="myuser",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="myuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.CreateModel(
            name="ProductSize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.CharField(blank=True, max_length=10, null=True)),
                ("quantity", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="psize",
                        to="backend.product",
                    ),
                ),
            ],
            options={
                "unique_together": {("product", "size")},
            },
        ),
        migrations.CreateModel(
            name="ProductColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=10, null=True)),
                ("color_id", models.CharField(blank=True, max_length=10, null=True)),
                ("quantity", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pcolor",
                        to="backend.product",
                    ),
                ),
            ],
            options={
                "unique_together": {("product", "color")},
            },
        ),
    ]
